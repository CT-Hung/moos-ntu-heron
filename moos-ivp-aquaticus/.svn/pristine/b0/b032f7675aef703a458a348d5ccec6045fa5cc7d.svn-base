ServerHost = localhost
ServerPort = $(MOOS_PORT)
Community  = $(VNAME)

#include ./plug_origin_warp.moos

//------------------------------------------------
ProcessConfig = ANTLER
{
  MSBetweenLaunches = 100

  Run = MOOSDB             @ NewConsole = false
  Run = pLogger            @ NewConsole = false
  Run = uProcessWatch      @ NewConsole = false
  Run = pShare             @ NewConsole = false
  Run = pNodeReporter      @ NewConsole = false
  Run = pMarinePID         @ NewConsole = false
  Run = pHelmIvP           @ NewConsole = false
  Run = pContactMgrV20     @ NewConsole = false
  Run = pHostInfo          @ NewConsole = false
  Run = uFldNodeBroker     @ NewConsole = false
  Run = pDeadManPost       @ NewConsole = false
  Run = uFldMessageHandler @ NewConsole = false
	Run = pRealm             @ NewConsole = false
  Run = pRangeEvent        @ NewConsole = false
  Run = pMapMarkers        @ NewConsole = false
  Run = pAlias             @ NewConsole = false

#ifdef XMODE SIM
  Run = uSimMarineV22      @ NewConsole = false
#elseifdef XMODE M300
  Run = iM300X             @ NewConsole = false
#endif
}

#ifdef XMODE SIM
  #include plug_uSimMarineV22.moos
#elseifdef XMODE M300
  #include plug_iM300X.moos
#endif

#include plug_pShare.moos
#include plug_pHostInfo.moos
#include plug_uProcessWatch.moos
	
//-----------------------------------------------
// pAlias Config Block

ProcessConfig = pAlias
{
  AppTick    = 4
  CommsTick  = 4

	app_logging = true
	
	alias = defend_ph # LOITER_UPDATES = polygon = format=ellipse, $(PH), degs=$(DANGX), major=25, minor=8, pts=16
	alias = defend_ph # ACTION = defend
	alias = defend_ph # STATION_KEEP = false
	alias = defend_ph # RETURN = false


	alias = defend_sh # LOITER_UPDATES = polygon = format=ellipse, $(SH), degs=$(DANGX), major=25, minor=8, pts=16
	alias = defend_sh # ACTION = defend
	alias = defend_sh # STATION_KEEP = false
	alias = defend_sh # RETURN = false

	alias = defend_ch # LOITER_UPDATES = polygon = format=ellipse, $(CH), degs=$(DANGX), major=50, minor=8, pts=16
	alias = defend_ch # ACTION = defend
	alias = defend_ch # STATION_KEEP = false
	alias = defend_ch # RETURN = false

}

//-----------------------------------------------
// pHelmIvP Config Block

ProcessConfig = pHelmIvP
{
  AppTick    = 4
  CommsTick  = 4

	app_logging = true
	
  behaviors   = targ_$(VNAME).bhv
  verbose     = false
  domain      = course:0:359:360
  domain      = speed:0:1.8:37

	hold_on_app = pContactMgrV20
	goals_mandatory = true

}

//----------------------------------------------- 
// pContactMgrV20 config block
	
ProcessConfig = pContactMgrV20
{
  AppTick   = 2
  CommsTick = 2

  decay = 30,60

  alert_verbose = true

  post_all_ranges = true

	//hold_alerts_for_helm = true
	
  contact_max_age = 35
  display_radii_id = avd
  display_radii = false
  alert_range_color = gray70
  cpa_range_color   = gray30
}

//--------------------------------------------------
// pLogger Config Block
	
ProcessConfig = pLogger
{
  AppTick     = 10
  CommsTick   = 10

  File          = LOG_%(VNAME)
  PATH          = ./
  AsyncLog      = true
  FileTimeStamp = true

  Log = IVPHELM_LIFE_EVENT @ 0 nosync
  Log = BCM_ALERT_REQUEST  @ 0 nosync

  // Log it all!!!!!
  LogAuxSrc = true
  WildCardLogging = true
  WildCardOmitPattern = *_STATUS
  WildCardOmitPattern = *_ITER_GAP
  WildCardOmitPattern = *_ITER_LEN
  WildCardOmitPattern = *_OVER_GROUND
  WildCardOmitPattern = DB_VARSUMMARY
  WildCardOmitPattern = DB_RWSUMMARY
  WildCardOmitPattern = APPCAST
  WildCardOmitPattern = NAV_Z
  WildCardOmitPattern = NAV_PITCH
  WildCardOmitPattern = DB_QOS

  //WildCardOmitPattern = BHV_IPF
}

//---------------------------------------
// pNodeReporter Config Block
	
ProcessConfig = pNodeReporter
{
  AppTick     = 2
  CommsTick   = 2

  vessel_type = $(VTYPE)
  group       = $(VTEAM)
  platform_color = $(VTEAM)
}


//--------------------------------------------------
// uFldMessageHandler Config Block
	
ProcessConfig = uFldMessageHandler
{
  AppTick   = 3
  CommsTick = 3

  strict_addressing = true
}

//--------------------------------------------------
// uFldNodeBroker Config Block

ProcessConfig = uFldNodeBroker
{
  AppTick   = 1
  CommsTick = 1

	app_logging = true
	
  try_shore_host = pshare_route=$(SHORE_IP):$(SHORE_PSHARE)
  //try_shore_host = pshare_route=$(SHORE_IP):$(SHORE_LISTEN)

	// Common locations worth trying
	//try_shore_host = pshare_route=192.168.1.37:9200

  bridge = src=VIEW_POLYGON
  bridge = src=VIEW_POINT
  bridge = src=VIEW_SEGLIST
  bridge = src=VIEW_CIRCLE
  bridge = src=VIEW_MARKER
  bridge = src=AVDCOL_MODE
  bridge = src=FLAG_GRAB_REQUEST
  bridge = src=TAG_REQUEST
  bridge = src=APPCAST
  bridge = src=NODE_REPORT_LOCAL,  alias=NODE_REPORT
  bridge = src=NODE_MESSAGE_LOCAL, alias=NODE_MESSAGE

}

//---------------------------------------
// pMarinePIDV22 Config Block
	
ProcessConfig = pMarinePID
{
  AppTick    = 10
  CommsTick  = 10

	app_logging = true

	deprecated = true
	
	deprecated_ok = true
	
  verbose       = true
  depth_control = false
  active_start  = true

#ifdef XMODE SIM
  yaw_pid_kp     = 1.2
  yaw_pid_kd     = 0.0
  yaw_pid_ki     = 0.3
  yaw_pid_integral_limit = 0.07
#elseifdef XMODE M300
  // Yaw PID controller (Set for M300)
  yaw_pid_kp             = 0.9 
  yaw_pid_kd             = 0.6 
  yaw_pid_ki             = 0.3  
  yaw_pid_integral_limit = 0.3 
#endif

  // Speed PID controller BETA
  //speed_pid_kp           = 0.9
  //speed_pid_kd           = 0.5
  //speed_pid_ki           = 0.05
  //speed_pid_integral_limit = 0.07

  // Speed PID controller DEFAULT
  speed_pid_kp           = 1.0
  speed_pid_kd           = 0.0
  speed_pid_ki           = 0.0
  speed_pid_integral_limit = 0.07

  // Maximums
  maxrudder  = 100 // 100
  maxthrust  = 100

  // A non-zero SPEED_FACTOR overrides use of SPEED_PID
  // Will set DESIRED_THRUST = DESIRED_SPEED * SPEED_FACTOR
  //SPEED_FACTOR = 20
}

//------------------------------------------------
// pRangeEvent config block

ProcessConfig = pRangeEvent
{
  AppTick   = 4
  CommsTick = 4

  // Range within which the event is triggered
  min_range = 0   // default
  max_range = 40  // default

	ignore_group = $(VTEAM)

  event_var = TAG_REQUEST=vname=$[SELFVNAME]
}

//------------------------------------------
// pDeadManPost Config Block

ProcessConfig = pDeadManPost
{
  AppTick   = 4
  CommsTick = 4

  heartbeat_var   = HEARTBEAT
  max_noheart     = 15
  post_policy     = reset
  active_at_start = false
  deadflag        = DEPLOY = false
 }

//--------------------------------------------------
// pMapMarkers Config Block

ProcessConfig = pMapMarkers
{
  AppTick       = 4
  CommsTick     = 4

	//app_logging = true

	marker_key = $(VNAME)

	//default_marker_color = $(VCOLOR)

	opfield = "ppb=green   # pb=white   # cb=white   # sb=white   # ssb=green"
	opfield = "ppf=white   # pf=white   # cf=white   # sf=white   # ssf=white"
	opfield = "pph=white   # ph=white   # ch=white   # sh=white   # ssh=white"
	opfield = "ppm=white   # pm=white   # cm=white   # sm=white   # ssm=white"
	opfield = "ppc=green   # pc=green   # cc=green   # sc=green   # ssc=green"
	opfield = "ppmx=gray40 # pmx=gray40 # cmx=gray40 # smx=gray40 # ssmx=gray40"
	opfield = "pphx=gray40 # phx=gray40 # chx=gray40 # shx=gray40 # sshx=gray40"
	opfield = "ppfx=gray40 # pfx=gray40 # cfx=gray40 # sfx=gray40 # ssfx=gray40"
	opfield = "ppbx=green  # pbx=gray40 # cbx=gray40 # sbx=gray40 # ssbx=green"
	
	opfield = "ppb=$(PPB)   # pb=$(PB)   # cb=$(CB)   # sb=$(SB)   # ssb=$(SSB)"
	opfield = "ppf=$(PPF)   # pf=$(PF)   # cf=$(CF)   # sf=$(SF)   # ssf=$(SSF)"
	opfield = "pph=$(PPH)   # ph=$(PH)   # ch=$(CH)   # sh=$(SH)   # ssh=$(SSH)"
	opfield = "ppm=$(PPM)   # pm=$(PM)   # cm=$(CM)   # sm=$(SM)   # ssm=$(SSM)"
	opfield = "ppc=$(PPC)   # pc=$(PC)   # cc=$(CC)   # sc=$(SC)   # ssc=$(SSC)"
	opfield = "ppmx=$(PPMX) # pmx=$(PMX) # cmx=$(CMX) # smx=$(SMX) # ssmx=$(SSMX)"
	opfield = "pphx=$(PPHX) # phx=$(PHX) # chx=$(CHX) # shx=$(SHX) # sshx=$(SSHX)"
	opfield = "ppfx=$(PPFX) # pfx=$(PFX) # cfx=$(CFX) # sfx=$(SFX) # ssfx=$(SSFX)"
	opfield = "ppbx=$(PPBX) # pbx=$(PBX) # cbx=$(CBX) # sbx=$(SBX) # ssbx=$(SSBX)"
}

	

